
ClusterServiceDiscovery --

Since there's no good way to do this yet, let's at least put an abstraction in
place.

Allow nodes to discover the location for a given service at runtime, adapting
when new services register.

Based in good part on code from Ben Black's cassandra recipes

Operations:

* register for a service. A timestamp records the last registry.
* discover all chef nodes that have registered for the given service.
* discover the most recent chef node for that service.
* get the 'public_ip' for a service -- the address that nodes in the larger
  world should use
* get the 'public_ip' for a service -- the address that nodes on the local
  subnet / private cloud should use

Implementation

Nodes register a service by setting the +[:provides_service][service_name]+
attribute. This attribute is a hash containing at 'timestamp' (the time of
registry), but the service can pass in an arbitrary hash of values to merge
in.

