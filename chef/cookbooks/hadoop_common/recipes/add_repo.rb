#
# Cookbook Name:: hadoop_common
# Recipe::        add_repo
#

#
#   Copyright (c) 2012-2014 VMware, Inc. All Rights Reserved.
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

prefix = nil
case node[:platform]
when 'centos'
  prefix = 'CentOS'
when 'redhat', 'oracle'
  prefix = 'rhel'
when 'fedora'
  prefix = 'fedora'
end

if prefix
  if !node[:enable_standard_os_yum_repos] or !is_connected_to_internet
    directory '/etc/yum.repos.d/backup' do
      mode '0755'
    end
    file = "/etc/yum.repos.d/#{prefix}*.repo"
    execute 'disable all standard yum repos' do
      only_if "ls #{file}"
      command "mv -f #{file} /etc/yum.repos.d/backup/; rm -rf /etc/yum.repos.d/*.repo"
    end
  else
    file = "/etc/yum.repos.d/backup/#{prefix}*.repo"
    execute 'enable all standard yum repos' do
      only_if "ls #{file}"
      command "mv -f #{file} /etc/yum.repos.d/"
    end
  end

  yum_repos = package_repos
  yum_repos.each do |yum_repo|
    Chef::Log.info("Add yum repo #{yum_repo}")
    basename = ::File.basename(yum_repo)

    if yum_repo.start_with?('https://')
      certfile = "#{node[:ssl_ca_path]}/#{basename.split('.')[0]}.pem"
      if certfile != node[:ssl_ca_file_serengeti_httpd] # the certificate file of serengeti internal yum server will be generated by Ironfan
        uri = URI(yum_repo)
        server = "#{uri.host}:#{uri.port}"
        execute "fetch certificate for https://#{server}" do
          command "echo | openssl s_client -connect #{server} 2>&1 | sed -n '/-\\+BEGIN/,/-\\+END/p' > #{certfile}"
        end
        file certfile do
          mode '0644'
        end

        # The following settings are added in /etc/chef/client.rb on Chef Nodes to enable
        # Chef Server's SSL Certificate Validation in Chef Client.
        #
        #   ssl_verify_mode :verify_peer
        #   ssl_ca_path "directory_of_certificate_files"
        #
        # See more on http://www.opscode.com/blog/2013/10/31/ssl-certificate-validation-in-chef/
        #
        # ssl_ca_path points to a directory containing CA certificates in PEM format.
        # The files each contain one CA certificate. The files are looked up by the CA subject name hash value, which must hence be available.
        # Need to use the OpenSSL c_rehash utility to create the necessary links for these .pem files.
        # wget and chef resource remote_file will need files in ssl_ca_path
        # See more on http://www.openssl.org/docs/ssl/SSL_CTX_load_verify_locations.html
        execute "generate ssl certificates hash" do
          command "c_rehash #{node[:ssl_ca_path]}"
        end
      end
    end

    remote_file "/etc/yum.repos.d/#{basename}" do
      source yum_repo
      mode '0644'
    end
  end
end

# if new rpms are added into the remote yum repo, yum won't be aware of it unless the cache is cleaned
if !node[:disable_clean_yum_cache]
  execute "clean yum repo cache" do
    command "yum clean all"
  end
end
